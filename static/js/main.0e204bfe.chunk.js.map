{"version":3,"sources":["img/banner.jpg","components/Banner.js","components/Navigationbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","src","bannerImage","alt","Navigationbar","Navbar","expand","Container","Brand","href","height","Toggle","aria-controls","Collapse","id","Nav","Link","Footer","Row","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oC,mNCY5BC,EANA,WACb,OACE,yBAAKC,UAAU,SAASC,IAAKC,IAAaC,IAAI,Y,wBCuBnCC,EA3BO,WACpB,OAGE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACC,EAAA,EAAD,KACA,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KACjB,yBACEN,IAAI,GACJF,IAAI,iBACJS,OAAO,KACPV,UAAU,8BAGd,kBAACK,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKf,UAAU,WACb,kBAACe,EAAA,EAAIC,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACM,EAAA,EAAIC,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACM,EAAA,EAAIC,KAAL,CAAUP,KAAK,YAAf,gB,QCNGQ,EAbA,WACb,OACE,kBAACC,EAAA,EAAD,CAAKlB,UAAU,eACb,kBAACO,EAAA,EAAD,CAAWP,UAAU,OACnB,iDACA,+CACA,uDACA,4C,MCiBOmB,MAjBf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,kBAACO,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,qKAMF,kBAAC,EAAD,QCXca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0e204bfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.971a7da4.jpg\";","import React from \"react\";\r\n\r\nimport bannerImage from \"../img/banner.jpg\";\r\n\r\n// import { Container } from \"react-bootstrap\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <img className=\"banner\" src={bannerImage} alt=\"banner\" />\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\n\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst Navigationbar = () => {\r\n  return (\r\n    // <Navbar expand=\"lg\" className=\"fixed-top\">\r\n  \r\n    <Navbar expand=\"lg\">\r\n        <Container>\r\n        <Navbar.Brand href=\"#\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/logo_text.png\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#about\">About</Nav.Link>\r\n            <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigationbar;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Row className=\"footer mt-3\">\r\n      <Container className=\"p-3\">\r\n        <p>¿Quienes somos?</p>\r\n        <p>¿Que hacemos?</p>\r\n        <p>¿Que solucion deseas?</p>\r\n        <p>Escribenos</p>\r\n      </Container>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./css/main.css\";\r\n\r\nimport Banner from \"./components/Banner\";\r\nimport Navigationbar from \"./components/Navigationbar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigationbar />\r\n      <Container>\r\n        <Banner />\r\n        <p>\r\n          En danggo trabajamos por desarrollar soluciones ajustadas a \r\n          las necesidades de nuestros clientes basados en los siguientes tres ejes.\r\n        </p>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}